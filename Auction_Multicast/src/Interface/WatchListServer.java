/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package Interface;

import Control.Book;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Juan
 */
public class WatchListServer extends javax.swing.JFrame {

    InterfaceUser in;
    /**
     * Creates new form WatchListServer
     */
    public WatchListServer(InterfaceUser in) {
        this.in=in;
        
        initComponents();
        //this.prencheTable();
    }
    
    public void LimparAndRequest(){
        this.JLServerBooks.removeAll();
        this.in.P.RequestAllBooks();
        this.in.P.sleeptc(1000);
    }
    
    public void AdicionaLivroServer(Book b){
        int rows = this.JLServerBooks.getRowCount();
        for(int i=0;i<rows;i++){
          Integer bookid = (Integer) this.JLServerBooks.getValueAt(i,0);
          if(bookid==b.getId()){
              DefaultTableModel model = (DefaultTableModel) this.JLServerBooks.getModel();
              model.removeRow(i);
          }
        }
        System.out.println(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>");
        DefaultTableModel model = (DefaultTableModel) this.JLServerBooks.getModel();
        System.out.println("nome " +b.getName() +"valor" +b.getWinnerValue());
        String winner;
                  if(b.getWinner()==-1){
                      winner="";
                  }
                  else{
                     winner=this.in.P.getPeerByPort(b.getWinner()).getName();
                  }
        model.addRow(new Object[]{b.getId(),b.getName(),b.getCurrentBid(),b.getEndTimeAuction().toString(),b.getDesc(),winner});
    }

    public void prencheTable()
    {
        this.in.P.RequestAllBooks();
        this.in.P.sleeptc(1000);
        this.JLServerBooks.removeAll();
        for(Book b : this.in.P.serverBooks)
        {
            if(b.inAuction())
            {
                String winner;
                  if(b.getWinner()==-1){
                      winner="";
                  }
                  else{
                     winner=this.in.P.getPeerByPort(b.getWinner()).getName();
                  }
                DefaultTableModel model = (DefaultTableModel) this.JLServerBooks.getModel();
                System.out.println("nome " +b.getName() +"valor" +b.getWinnerValue());
                model.addRow(new Object[]{b.getId(),b.getName(),b.getCurrentBid(),b.getEndTimeAuction().toString(),b.getDesc()});
            }
        }
    }
    
  /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        JPServerBooks = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JLServerBooks = new javax.swing.JTable();
        LabelPriceServer = new javax.swing.JLabel();
        JTPriceServer = new javax.swing.JTextField();
        JButtonBidServer = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        JPServerBooks.setBorder(javax.swing.BorderFactory.createTitledBorder("Books on the server"));

        JLServerBooks.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Price", "Time", "Description", "Winner Bid Owner"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JLServerBooks.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(JLServerBooks);

        LabelPriceServer.setText("Bid $");

        JButtonBidServer.setText("Bid");
        JButtonBidServer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JButtonBidServerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout JPServerBooksLayout = new javax.swing.GroupLayout(JPServerBooks);
        JPServerBooks.setLayout(JPServerBooksLayout);
        JPServerBooksLayout.setHorizontalGroup(
            JPServerBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPServerBooksLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JPServerBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(JPServerBooksLayout.createSequentialGroup()
                        .addComponent(LabelPriceServer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JTPriceServer, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(JButtonBidServer, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 40, Short.MAX_VALUE)))
                .addContainerGap())
        );
        JPServerBooksLayout.setVerticalGroup(
            JPServerBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JPServerBooksLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(JPServerBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelPriceServer)
                    .addComponent(JTPriceServer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JButtonBidServer))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButton1.setText("Voltar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(JPServerBooks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(JPServerBooks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void JButtonBidServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JButtonBidServerActionPerformed
        int selecionada = this.JLServerBooks.getSelectedRow();
        if(selecionada > -1)
        {
            
            Integer bookid = (Integer) this.JLServerBooks.getValueAt(selecionada,0);
            System.out.println(bookid);
            String value = this.JTPriceServer.getText();
            this.in.P.sendBidToServer(bookid, value);
        }
        this.JTPriceServer.setText(" ");
        this.setVisible(false);
    }//GEN-LAST:event_JButtonBidServerActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.LimparAndRequest();
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(WatchListServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(WatchListServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(WatchListServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(WatchListServer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new WatchListServer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton JButtonBidServer;
    private javax.swing.JTable JLServerBooks;
    private javax.swing.JPanel JPServerBooks;
    private javax.swing.JTextField JTPriceServer;
    private javax.swing.JLabel LabelPriceServer;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
